设计思路：
1.在swap.c的第41行的代码“sm = &swap_manager_fifo;”中的swap_manager_fifo替换为swap_manager_clock，即可在lab3中实现自定义的clock算法。
2.在swap_fifo.c的init_mm()接口中，将初始的双向链表设置为环状，页面访问位置零，并增加一个时钟指针，指向最先调入的页面。
3.在swap_out_victim()接口中，从指针当前位置顺序检查环形链表；若访问位是0，则置换该页，指针移动到下一项；若访问位是1，则把访问位置0，
指针移动到下一项，重复这个过程直到找到可以置换的页面。

性能差别：
clock算法是LRU算法和FIFO算法的折中，它仅对页面的访问情况作大致统计，并且页面置换时无需修改链表的结构，因此时间开销比LRU算法低。
对于未被访问的页面，Clock退化为LRU，表现一样好，而对于被访问过的页面，Clock不记录准确访问顺序，表现比LRU差但是比FIFO好。
